<?php
/**
 * @file
 * Hooks and callbacks for this module.
 */

/**
 * Implements hook_icon_providers().
 */
function dgi_fontello_icon_providers() {
  $providers['dgi_fontello_default_bundle'] = array(
    'title' => t('DGI Fontello'),
    'default bundle' => array(
      'settings' => array(),
    ),
  );
  return $providers;
}

/**
 * Implements hook_icon_bundle_configure().
 */
function dgi_fontello_icon_bundle_configure(&$settings, &$form_state, &$complete_form) {
  $bundle = $form_state['bundle'];
  if ($bundle['provider'] === 'DGI Fontello') {
    $settings['tag'] = array(
      '#type' => 'select',
      '#title' => t('HTML Markup'),
      '#description' => t('Choose the HTML markup tag'),
      '#options' => drupal_map_assoc(array('i', 'span', 'div')),
      '#default_value' => $bundle['settings']['tag'],
    );
  }
}

/**
 * Implements hook_preprocess_icon_RENDER_HOOK().
 */
function dgi_fontello_preprocess_icon_sprite(&$variables) {
  $bundle = &$variables['bundle'];
  if ($bundle['provider'] === 'DGI Fontello') {
    $variables['attributes']['class'][] = 'icon-' . $variables['icon'];
  }
}

/**
 * Implements hook_libraries_info().
 */
function dgi_fontello_libraries_info() {
  $library = libraries_get_path('dgi_fontello');

  $libraries = array();
  $libraries['dgi_fontello'] = array(
    'name' => 'DGI Fontello',
    'vendor url' => 'http://fontello.com/',
    'download url' => 'https://github.com/fontello/fontello.git',
    'version callback' => 'dgi_fontello_short_circuit_version',
    'files' => array(
      'css' => array(
        'css/fontello.css',
      ),
    ),
  );

  return $libraries;
}

/**
 * Short circut the version callback in hook libraries.
 */
function dgi_fontello_short_circuit_version() {
  // XXX: Since the library will be different for every install, potentially,
  // we are returning true so the library will load.
  return TRUE;
}

/**
 * Implements hook_preprocess_html().
 */
function dgi_fontello_preprocess_html(&$variables) {
  // Make the icon library available on every page.
  libraries_load('dgi_fontello');
}

/**
 * Implements hook_icon_bundles().
 */
function dgi_fontello_icon_bundles() {
  $library_path = libraries_get_path('dgi_fontello');

  // Read the config.json from the fontello export in the dgi_fontello
  // Library.
  $icons = array();
  $json_string = file_get_contents("$library_path/config.json");
  $json_config = json_decode($json_string, TRUE);

  // Prepare the icons array for use with this bundle hook.
  foreach ($json_config['glyphs'] as $glyph) {
    $icons[$glyph['css']] = $glyph['css'];
  }

  $bundles['dgi_default_bundle'] = array(
    'render' => 'sprite',
    'title' => t('DGI Fontello'),
    'provider' => t('DGI Fontello'),
    'url' => 'http://fontello.com/',
    'path' => $library_path,
    'icons' => $icons,
    'settings' => array(
      'tag' => 'i',
    ),
    '#attached' => array(
      'css' => array(
        $library_path . '/css/fontello.css',
      ),
    ),
  );
  return $bundles;
}
